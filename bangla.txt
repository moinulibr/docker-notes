প্রজেক্ট পরিবেশ সেটআপ গাইড: ডকার (Docker) ব্যবহার
এই গাইডটি ব্যাখ্যা করবে ডকার কী, কেন আমরা লোকাল ডেভেলপমেন্টের জন্য এটিকে ব্যবহার করছি এবং উইন্ডোজ অপারেটিং সিস্টেমে কীভাবে এটি সেটআপ করে প্রজেক্ট চালু করতে হয়।

১. ডকার কী এবং কেন আমরা এটি ব্যবহার করি?
ডকার হলো কন্টেইনারাইজেশন (Containerization) প্রযুক্তি ব্যবহার করে অ্যাপ্লিকেশন প্যাকেজিং এবং বিতরণ করার একটি প্ল্যাটফর্ম।

সহজ কথায়, ডকার আপনার অ্যাপ্লিকেশন এবং তার প্রয়োজনীয় সমস্ত পরিবেশ (যেমন: PHP, MySQL, Node.js) একটি ছোট, বিচ্ছিন্ন প্যাকেজ বা কন্টেইনারে মুড়িয়ে দেয়।

কেন XAMPP/Laragon এর পরিবর্তে ডকার?
আমরা ঐতিহ্যবাহী টুলের পরিবর্তে ডকার ব্যবহার করি কারণ এটি "আমার মেশিনে যা চলছে, আপনার মেশিনে তা চলছে না" এই মূল সমস্যাটি সমাধান করে।

সমস্যা

Laragon/XAMPP (ভার্সন কনফ্লিক্ট)

Docker (কন্টেইনার)

পরিবেশের সামঞ্জস্য

আপনার ল্যাপটপে PHP 8.1, কিন্তু লাইভ সার্ভারে PHP 8.3। এতে কোড ব্রেক হতে পারে।

আমরা কন্টেইনারকে PHP 8.3 ব্যবহার করার জন্য সংজ্ঞায়িত করি। এই কন্টেইনারটি আপনার, আমার, বা প্রোডাকশন সার্ভার—সব জায়গায় হুবহু একই আচরণ করবে।

পরিষ্কার সিস্টেম

লোকাল মেশিনে সরাসরি সার্ভার সফটওয়্যার ইনস্টল হয়।

কন্টেইনার একটি বিচ্ছিন্ন পরিবেশে চলে। এটি আপনার উইন্ডোজ সিস্টেমের সেটিংস পরিবর্তন করে না বা হার্ড ড্রাইভকে বিশৃঙ্খল করে না।

দলগত কাজ

প্রতিটি টিম সদস্যের একই লোকাল সেটআপ নিশ্চিত করা কঠিন।

ডকার ফাইলগুলি গিটে কমিট করা থাকে। টিমের প্রতিটি সদস্য প্রজেক্ট ক্লোন করে একটি মাত্র কমান্ড (sail up) দিয়েই অভিন্ন, প্রি-কনফিগার করা পরিবেশ চালু করতে পারে।

২. উইন্ডোজে ডকার সেটআপ (WSL 2)
উইন্ডোজে ডকার ডেস্কটপ দক্ষতার সাথে চালানোর জন্য WSL 2 (Windows Subsystem for Linux 2) এর ইন্টিগ্রেশন বাধ্যতামূলক।

ধাপ ১: WSL 2 ইনস্টল ও প্রস্তুত করা
১. PowerShell চালু করুন: উইন্ডোজ স্টার্ট মেনুতে PowerShell সার্চ করুন এবং "Run as Administrator" হিসেবে ওপেন করুন।
২. WSL ইনস্টল কমান্ড: নিচের কমান্ডটি দিন (এটি লিনাক্স কার্নেল এবং একটি ডিফল্ট উবুন্টু ডিস্ট্রিবিউশন স্বয়ংক্রিয়ভাবে ইনস্টল করবে):

wsl --install

৩. কম্পিউটার রিস্টার্ট: পরিবর্তনগুলি প্রয়োগের জন্য আপনার কম্পিউটার রিস্টার্ট করুন এবং নিশ্চিত করুন WSL 2 সঠিকভাবে লোড হয়েছে।
৪. ভার্সন যাচাই (ঐচ্ছিক): রিস্টার্টের পর, wsl -l -v কমান্ড দিয়ে নিশ্চিত করুন যে আপনার ডিস্ট্রিবিউশনগুলি ভার্সন ২ এ চলছে।

ধাপ ২: Docker Desktop ইনস্টল করা
১. ডাউনলোড: অফিসিয়াল ওয়েবসাইট থেকে Docker Desktop for Windows ডাউনলোড করুন।
২. ইনস্টল: .exe ফাইলটি রান করুন। ইনস্টলেশনের সময় নিশ্চিত করুন যে 'Use WSL 2 based engine' অপশনটি চেক করা আছে।
৩. ডকার চালু: Docker Desktop অ্যাপ্লিকেশনটি চালু করুন। সিস্টেম ট্রে-তে ডকার আইকনটি সবুজ বা "Running" স্টেট দেখানো পর্যন্ত অপেক্ষা করুন।

৩. সেল (Sail) ব্যবহার করে লারাভেল প্রজেক্ট চালু করা
আমরা আমাদের প্রজেক্টের জন্য Laravel Sail ব্যবহার করি। এটি একটি সুবিধাজনক sail স্ক্রিপ্ট ব্যবহার করে কনফিগারেশন সহজ করে এবং ডকার কন্টেইনারগুলি পরিচালনা করে।

ধাপ ১: কন্টেইনারগুলি চালু করুন
আপনার প্রজেক্টের রুট ডিরেক্টরিতে টার্মিনাল (CMD/PowerShell/Git Bash) ওপেন করুন এবং নিচের কমান্ডটি দিন:

./vendor/bin/sail up -d

sail up: docker-compose.yml ফাইল পড়ে সমস্ত প্রয়োজনীয় কন্টেইনার (PHP, MySQL, Node.js) তৈরি করে এবং চালু করে।

-d: Detached Mode এর জন্য ব্যবহৃত হয়। এর ফলে কন্টেইনারগুলি ব্যাকগ্রাউন্ডে চলতে থাকে এবং আপনার টার্মিনাল ফ্রি থাকে।

(প্রথমবার রান করার সময় ইন্টারনেট থেকে ইমেজ ডাউনলোড করার কারণে কিছুটা সময় লাগতে পারে।)

ধাপ ২: অ্যাপ্লিকেশন অ্যাক্সেস
কন্টেইনারগুলি সফলভাবে চালু হওয়ার পরে, আপনি আপনার ওয়েব ব্রাউজারে এই ঠিকানায় লারাভেল অ্যাপ্লিকেশনটি অ্যাক্সেস করতে পারবেন:

http://localhost

ধাপ ৩: প্রজেক্ট কমান্ড চালানো
ডকারাইজড পরিবেশে, আপনি আর সরাসরি php artisan বা composer এর মতো কমান্ড ব্যবহার করতে পারবেন না। আপনাকে সঠিক কন্টেইনারের ভিতরে কমান্ডগুলি কার্যকর করতে প্রতিটি কমান্ডের আগে ./vendor/bin/sail যুক্ত করতে হবে।

স্ট্যান্ডার্ড কমান্ড

ডকার/সেল কমান্ড

composer install

./vendor/bin/sail composer install

php artisan migrate

./vendor/bin/sail artisan migrate

npm run dev

./vendor/bin/sail npm run dev

ধাপ ৪: কন্টেইনারগুলি বন্ধ করা
কাজ শেষ হয়ে গেলে সিস্টেম রিসোর্স মুক্ত করতে কন্টেইনারগুলি বন্ধ করা উচিত।

./vendor/bin/sail down

sail down: প্রজেক্ট সম্পর্কিত চালু থাকা সমস্ত কন্টেইনার (Container) বন্ধ করে দেয় এবং সিস্টেম থেকে সেগুলিকে সরিয়ে দেয়।

৪. গিট (Git) সেরা অভ্যাস
ডকার ফাইল কমিট: আপনার docker-compose.yml ফাইল (এবং কাস্টম Dockerfile থাকলে) অবশ্যই গিটে কমিট করতে হবে। এটি নিশ্চিত করে যে প্রতিটি টিম সদস্য অভিন্ন পরিবেশের ব্লুপ্রিন্ট পাচ্ছে।

ডেটা বাদ দিন: নিশ্চিত করুন আপনার .gitignore ফাইলে vendor এবং আপনার ডেটাবেস ফাইল (database/database.sqlite) এর মতো ফোল্ডার ও ফাইলগুলি বাদ দেওয়া আছে। এই ফাইলগুলি কমিট করা উচিত নয়।